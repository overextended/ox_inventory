{"version":3,"sources":["typings/inventory.ts","reducers/refreshSlots.ts","helpers/index.ts","store/inventory.ts","reducers/stackSlots.ts","reducers/swapSlots.ts","reducers/setupInventory.ts","reducers/moveSlots.ts","store/index.ts","utils/misc.ts","hooks/useNuiEvent.ts","components/utils/DragPreview.tsx","components/utils/Notifications.tsx","utils/fetchNui.ts","components/utils/ProgressBar.tsx","hooks/useKeyPress.ts","store/items.ts","components/utils/Fade.tsx","components/utils/WeightBar.tsx","thunks/validateItems.ts","thunks/buyItem.ts","components/inventory/InventorySlot.tsx","dnd/onBuy.ts","dnd/onDrop.ts","components/inventory/InventoryGrid.tsx","components/inventory/InventoryControl.tsx","dnd/onUse.ts","dnd/onGive.ts","components/inventory/InventoryHotbar.tsx","hooks/useExitListener.ts","components/inventory/index.tsx","components/App.tsx","index.tsx"],"names":["InventoryType","isSlotWithItem","slot","strict","undefined","name","weight","count","getTargetInventory","state","sourceType","targetType","sourceInventory","PLAYER","leftInventory","rightInventory","targetInventory","inventorySlice","createSlice","initialState","id","type","slots","maxWeight","items","itemAmount","shiftPressed","isBusy","reducers","stackSlots","action","payload","fromSlot","fromType","toSlot","toType","pieceWeight","SHOP","swapSlots","setupInventory","Array","from","_","index","Object","values","find","item","moveSlots","refreshSlots","isArray","filter","data","forEach","inventory","setItemAmount","setShiftPressed","extraReducers","builder","addMatcher","isPending","history","current","isFulfilled","isRejected","actions","selectLeftInventory","selectRightInventory","selectItemAmount","selectIsBusy","store","configureStore","reducer","inventoryReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","isEnvBrowser","window","invokeNative","noop","useNuiEvent","handler","savedHandler","useRef","useEffect","eventListener","event","eventAction","addEventListener","removeEventListener","subtract","a","b","x","y","calculatePointerPosition","monitor","childRef","offset","getClientOffset","getBoundingClientRect","client","getInitialClientOffset","source","getInitialSourceClientOffset","calculateParentOffset","bb","middle","width","height","DragPreview","element","useDragLayer","getItem","currentOffset","isDragging","ref","className","style","transform","backgroundImage","process","Notify","toast","text","duration","position","backgroundColor","Notifications","toastOptions","color","borderRadius","padding","fetchNui","eventName","options","method","headers","body","JSON","stringify","resourceName","GetParentResourceName","fetch","resp","json","respFormatted","ProgressBar","useState","setDuration","isVisible","setVisible","isCancelled","setCancelled","setText","setTimeout","animationDuration","onAnimationEnd","useKeyPress","targetKey","React","keyPressed","setKeyPressed","downHandler","useCallback","key","upHandler","Items","water","close","label","stack","usable","burger","Fade","props","opacity","visible","transition","children","colorChannelMixer","colorChannelA","colorChannelB","amountToMix","colorMixer","rgbA","rgbB","r","g","COLORS","WeightBar","percent","durability","useMemo","visibility","validateMove","createAsyncThunk","rejectWithValue","response","buyItem","InventorySlot","setCurrentItem","useDrag","collect","canDrag","drag","useDrop","accept","isOver","drop","target","getState","sourceSlot","targetSlot","promise","dispatch","loading","success","error","onBuy","sourceData","Error","metadata","findAvailableSlot","Math","floor","canStack","onDrop","canDrop","onMouseEnter","onMouseLeave","border","toLocaleString","minimumFractionDigits","InventoryGrid","currentItem","reduce","totalWeight","map","borderBottom","InfoScreen","infoVisible","setInfoVisible","icon","faTimes","onClick","InventoryControl","use","give","margin","min","defaultValue","onChange","valueAsNumber","faInfoCircle","InventoryHotbar","hotbarVisible","setHotbarVisible","handle","setHandle","clearTimeout","LISTENED_KEYS","Inventory","inventoryVisible","setInventoryVisible","visibleSetter","setterRef","keyHandler","e","includes","code","useExitListener","slice","App","entries","ReactDOM","render","StrictMode","DndProvider","backend","TouchBackend","enableMouseEvents","document","getElementById"],"mappings":"6IAEYA,E,yFAAAA,K,gBAAAA,E,aAAAA,M,KCCL,ICAMC,EAAiB,SAACC,GAAD,IAAaC,EAAb,oEACbC,IAAdF,EAAKG,WAAsCD,IAAhBF,EAAKI,QAChCH,QAAwBC,IAAdF,EAAKG,WAAqCD,IAAfF,EAAKK,YAAuCH,IAAhBF,EAAKI,QAe5DE,EAAqB,SAChCC,EACAC,EACAC,GAHgC,MAIgC,CAChEC,gBAAiBF,IAAeV,EAAca,OAASJ,EAAMK,cAAgBL,EAAMM,eACnFC,gBAAiBL,EACbA,IAAeX,EAAca,OAC3BJ,EAAMK,cACNL,EAAMM,eACRL,IAAeV,EAAca,OAC7BJ,EAAMM,eACNN,EAAMK,gBCMCG,EAAiBC,YAAY,CACxCb,KAAM,YACNc,aAtB0B,CAC1BL,cAAe,CACbM,GAAI,GACJC,KAAM,GACNC,MAAO,EACPC,UAAW,EACXC,MAAO,IAETT,eAAgB,CACdK,GAAI,GACJC,KAAM,GACNC,MAAO,EACPC,UAAW,EACXC,MAAO,IAETC,WAAY,EACZC,cAAc,EACdC,QAAQ,GAMRC,SAAU,CACRC,WC7BA,SAACpB,EAAOqB,GACV,MAAsDA,EAAOC,QAArDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAAQ5B,EAA5C,EAA4CA,MAE5C,EAA6CC,EAAmBC,EAAOwB,EAAUE,GAAzEvB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,gBAEnBoB,EAAcJ,EAAS1B,OAAS0B,EAASzB,MAE/CS,EAAgBQ,MAAMU,EAAOhC,KAAO,GAApC,2BACKc,EAAgBQ,MAAMU,EAAOhC,KAAO,IADzC,IAEEK,MAAO2B,EAAO3B,MAAQA,EACtBD,OAAQ8B,GAAeF,EAAO3B,MAAQA,KAGpC0B,IAAajC,EAAcqC,OAE/BzB,EAAgBY,MAAMQ,EAAS9B,KAAO,GACpC8B,EAASzB,MAAQA,EAAQ,EAAzB,2BAESK,EAAgBY,MAAMQ,EAAS9B,KAAO,IAF/C,IAGMK,MAAOyB,EAASzB,MAAQA,EACxBD,OAAQ8B,GAAeJ,EAASzB,MAAQA,KAE1C,CACEL,KAAM8B,EAAS9B,QDOrBoC,UE/BA,SAAC7B,EAAOqB,GACV,MAA+CA,EAAOC,QAA9CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAEpC,EAA6C3B,EAAmBC,EAAOwB,EAAUE,GAAzEvB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,gBAHJ,EAKgE,CAAC,2BAE/EA,EAAgBQ,MAAMU,EAAOhC,KAAO,IAF0C,IAGjFA,KAAM8B,EAAS9B,OAHkE,2BAM9EU,EAAgBY,MAAMQ,EAAS9B,KAAO,IANwC,IAOjFA,KAAMgC,EAAOhC,QAPhBU,EAAgBY,MAAMQ,EAAS9B,KAAO,GALlB,KAKsBc,EAAgBQ,MAAMU,EAAOhC,KAAO,GAL1D,MFgCnBqC,eGnCA,SAAC9B,EAAOqB,GACV,MAA0CA,EAAOC,QAAzCjB,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,eAEnBD,IACFL,EAAMK,cAAN,2BACKA,GADL,IAEEU,MAAOgB,MAAMC,KACXD,MAAM1B,EAAcQ,QACpB,SAACoB,EAAGC,GAAJ,OACEC,OAAOC,OAAO/B,EAAcU,OAAOsB,MAAK,SAACC,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7C,QAASyC,EAAQ,MAAM,CAC7EzC,KAAMyC,EAAQ,SAKpB5B,IACFN,EAAMM,eAAN,2BACKA,GADL,IAEES,MAAOgB,MAAMC,KACXD,MAAMzB,EAAeO,QACrB,SAACoB,EAAGC,GAAJ,OACEC,OAAOC,OAAO9B,EAAeS,OAAOsB,MAAK,SAACC,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7C,QAASyC,EAAQ,MAAM,CAC9EzC,KAAMyC,EAAQ,UHctBK,UIhCA,SAACvC,EAAOqB,GACV,MAAsDA,EAAOC,QAArDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAAQ5B,EAA5C,EAA4CA,MAE5C,EAA6CC,EAAmBC,EAAOwB,EAAUE,GAAzEvB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,gBAEnBoB,EAAcJ,EAAS1B,OAAS0B,EAASzB,MAE/CS,EAAgBQ,MAAMU,EAAOhC,KAAO,GAApC,2BACKU,EAAgBY,MAAMQ,EAAS9B,KAAO,IAD3C,IAEEK,MAAOA,EACPD,OAAQ8B,EAAc7B,EACtBL,KAAMgC,EAAOhC,OAGX+B,IAAajC,EAAcqC,OAE/BzB,EAAgBY,MAAMQ,EAAS9B,KAAO,GACpC8B,EAASzB,MAAQA,EAAQ,EAAzB,2BAESK,EAAgBY,MAAMQ,EAAS9B,KAAO,IAF/C,IAGMK,MAAOyB,EAASzB,MAAQA,EACxBD,OAAQ8B,GAAeJ,EAASzB,MAAQA,KAE1C,CACEL,KAAM8B,EAAS9B,QJSrB+C,aFtCA,SAACxC,EAAOqB,GACLU,MAAMU,QAAQpB,EAAOC,WAAUD,EAAOC,QAAU,CAACD,EAAOC,UAE7Da,OAAOC,OAAOf,EAAOC,SAClBoB,QAAO,SAACC,GAAD,QAAYA,KACnBC,SAAQ,SAACD,IACgBA,EAAKE,WACzBF,EAAKE,YAActD,EAAca,OAC/BJ,EAAMM,eAERN,EAAMK,eACMU,MAAM4B,EAAKL,KAAK7C,KAAO,GAAKkD,EAAKL,SE4BnDQ,cAAe,SAAC9C,EAAOqB,GACrBrB,EAAMgB,WAAaK,EAAOC,SAE5ByB,gBAAiB,SAAC/C,EAAOqB,GACvBrB,EAAMiB,aAAeI,EAAOC,UAGhC0B,cAAe,SAACC,GACdA,EAAQC,WAAWC,KAAW,SAACnD,GAC7BA,EAAMkB,QAAS,EAEflB,EAAMoD,QAAU,CACd/C,cAAegD,YAAQrD,EAAMK,eAC7BC,eAAgB+C,YAAQrD,EAAMM,oBAGlC2C,EAAQC,WAAWI,KAAa,SAACtD,GAC/BA,EAAMkB,QAAS,KAEjB+B,EAAQC,WAAWK,KAAY,SAACvD,GAC1BA,EAAMoD,SAAWpD,EAAMoD,QAAQ/C,eAAiBL,EAAMoD,QAAQ9C,iBAChEN,EAAMK,cAAgBL,EAAMoD,QAAQ/C,cACpCL,EAAMM,eAAiBN,EAAMoD,QAAQ9C,gBAEvCN,EAAMkB,QAAS,QAKd,EAQHV,EAAegD,QAPjBV,EADK,EACLA,cACAC,EAFK,EAELA,gBACAjB,EAHK,EAGLA,eACAD,EAJK,EAILA,UACAU,EALK,EAKLA,UACAnB,EANK,EAMLA,WACAoB,EAPK,EAOLA,aAEWiB,EAAsB,SAACzD,GAAD,OAAsBA,EAAM6C,UAAUxC,eAC5DqD,EAAuB,SAAC1D,GAAD,OAAsBA,EAAM6C,UAAUvC,gBAC7DqD,EAAmB,SAAC3D,GAAD,OAAsBA,EAAM6C,UAAU7B,YACzD4C,EAAe,SAAC5D,GAAD,OAAsBA,EAAM6C,UAAU3B,QAEnDV,IAAf,QKtFaqD,EAAQC,YAAe,CAClCC,QAAS,CACPlB,UAAWmB,KAaFC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OClBlDC,EAAe,kBAAiBC,OAAeC,cAG/CC,EAAO,aCiBPC,EAAc,SAAUpD,EAAgBqD,GACnD,IAAMC,EAAyDC,iBAAOJ,GAGtEK,qBAAU,WACRF,EAAatB,QAAUqB,IACtB,CAACA,IAEJG,qBAAU,WACR,IAAMC,EAAgB,SAACC,GACrB,MAAsCA,EAAMpC,KAA5BqC,EAAhB,EAAQ3D,OAAqBsB,EAA7B,EAA6BA,KAEzBgC,EAAatB,SACX2B,IAAgB3D,GAClBsD,EAAatB,QAAQV,IAO3B,OAFA2B,OAAOW,iBAAiB,UAAWH,GAE5B,kBAAMR,OAAOY,oBAAoB,UAAWJ,MAClD,CAACzD,KAGSoD,I,eCrCTU,EAAW,SAACC,EAAYC,GAC5B,MAAO,CACLC,EAAGF,EAAEE,EAAID,EAAEC,EACXC,EAAGH,EAAEG,EAAIF,EAAEE,IAkBFC,EAA2B,SACtCC,EACAC,GAEA,IAAMC,EAASF,EAAQG,kBACvB,GAAe,OAAXD,EACF,OAAO,KAGT,IAAKD,EAASrC,UAAYqC,EAASrC,QAAQwC,sBACzC,OAAOV,EAASQ,EAxBU,SAACF,GAC7B,IAAMK,EAASL,EAAQM,yBACjBC,EAASP,EAAQQ,+BACvB,OACa,OAAXH,GACW,OAAXE,QACarG,IAAbmG,EAAOR,QACM3F,IAAbmG,EAAOP,EAEA,CAAED,EAAG,EAAGC,EAAG,GAEbJ,EAASW,EAAQE,GAaEE,CAAsBT,IAGhD,IAAMU,EAAKT,EAASrC,QAAQwC,wBACtBO,EAAS,CAAEd,EAAGa,EAAGE,MAAQ,EAAGd,EAAGY,EAAGG,OAAS,GACjD,OAAOnB,EAASQ,EAAQS,IA+BXG,EA5Be,WAC5B,IAAMC,EAAU5B,iBAAuB,MACvC,EAA4C6B,aAC1C,SAAChB,GAAD,MAAc,CACZ9C,KAAM8C,EAAQiB,UACdC,cAAenB,EAAyBC,EAASe,GACjDI,WAAYnB,EAAQmB,iBAJhBjE,EAAR,EAAQA,KAAMiE,EAAd,EAAcA,WAAYD,EAA1B,EAA0BA,cAQ1B,OACE,mCACGC,GAAcD,GAAiBhE,EAAKL,MACnC,qBACEuE,IAAKL,EACLM,UAAU,OACVC,MAAO,CACLC,UAAU,aAAD,OAAeL,EAAcrB,EAA7B,eAAqCqB,EAAcpB,EAAnD,OACT0B,gBAAgB,OAAD,OACbC,aAAA,kBAAoCvE,EAAKL,KAAK1C,KAA9C,QADa,W,eCzBrBuH,EAAS,SAACxE,GACdyE,YAAMzE,EAAK0E,KAAM,CACfC,SAAU3E,EAAK2E,UAAY,IAC3BC,SAAU5E,EAAK4E,UAAY,aAC3BR,MAAO,CACLS,qBACgB7H,IAAdgD,EAAK/B,KACD,oBACc,YAAd+B,EAAK/B,KACL,mBACA,uBAwBG6G,EAnBiB,WAK9B,OAJAhD,EAA+B,aAAa,SAAC9B,GAC3CwE,EAAOxE,MAIP,cAAC,IAAD,CACE+E,aAAc,CAEZX,MAAO,CACLY,MAAO,QACPC,aAAc,MACdC,QAAS,W,yBC1DZ,SAAeC,EAAtB,oC,4CAAO,WAAiCC,EAAmBpF,GAApD,qBAAAyC,EAAA,6DACC4C,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU1F,IAGjB2F,EAAgBhE,OAAeiE,sBAChCjE,OAAeiE,wBAChB,gBAXC,SAacC,MAAM,WAAD,OAAYF,EAAZ,YAA4BP,GAAaC,GAb5D,cAaCS,EAbD,gBAeuBA,EAAKC,OAf5B,cAeCC,EAfD,yBAiBEA,GAjBF,4C,sBCMP,IAmCeC,EAnCe,WAC5B,MAAgCC,mBAAS,GAAzC,mBAAOvB,EAAP,KAAiBwB,EAAjB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAwBL,mBAAS,IAAjC,mBAAOxB,EAAP,KAAa8B,EAAb,KAcA,OAZA1E,EAAgD,iBAAiB,SAAC9B,GAChEwG,EAAQxG,EAAK0E,MACbyB,EAAYnG,EAAK2E,UACjB0B,GAAW,GACXE,GAAa,MAGfzE,EAAY,kBAAkB,WAC5ByE,GAAa,GACbE,YAAW,kBAAMJ,GAAW,KAAQ,SAIpC,mCACGD,GACC,qBAAKjC,UAAU,cAAf,SACE,qBACEA,UAAWmC,EAAc,qBAAuB,oBAChDlC,MAAO,CAAEsC,kBAAkB,GAAD,OAAK/B,EAAL,OAC1BgC,eAAgB,WAAON,GAAW,GAAQlB,EAAS,kCAHrD,SAKE,+BAAOT,WCRJkC,EAlCY,SAACC,GAC1B,MAAoCC,IAAMZ,UAAS,GAAnD,mBAAOa,EAAP,KAAmBC,EAAnB,KAEMC,EAAcH,IAAMI,aACxB,YAA4B,EAAzBC,MACWN,GACVG,GAAc,KAGlB,CAACH,IAGGO,EAAYN,IAAMI,aACtB,YAA4B,EAAzBC,MACWN,GACVG,GAAc,KAGlB,CAACH,IAaH,OAVAC,IAAM5E,WAAU,WAId,OAHAP,OAAOW,iBAAiB,UAAW2E,GACnCtF,OAAOW,iBAAiB,QAAS8E,GAE1B,WACLzF,OAAOY,oBAAoB,UAAW0E,GACtCtF,OAAOY,oBAAoB,QAAS6E,MAErC,CAACH,EAAaG,IAEVL,GC/BIM,EAET,CACFC,MAAO,CACLC,OAAO,EACPC,MAAO,OACPC,OAAO,EACPC,QAAQ,GAEVC,OAAQ,CACNJ,OAAO,EACPC,MAAO,QACPC,OAAO,EACPC,QAAQ,ICCGE,GAdqE,SAACC,GACnF,OACE,qBACEzD,MAAO,CACL0D,QAASD,EAAME,QAAU,EAAI,EAC7BC,WAAW,WAAD,OAAaH,EAAMlD,UAAY,GAA/B,eAEZR,UAAW0D,EAAM1D,UALnB,SAOG0D,EAAMI,YCTPC,GAAoB,SACxBC,EACAC,EACAC,GAIA,OAFeF,EAAgBE,EAChBD,GAAiB,EAAIC,IAIhCC,GAAa,SAACC,EAAgBC,EAAgBH,GAClD,IAAII,EAAIP,GAAkBK,EAAK,GAAIC,EAAK,GAAIH,GACxCK,EAAIR,GAAkBK,EAAK,GAAIC,EAAK,GAAIH,GACxC3F,EAAIwF,GAAkBK,EAAK,GAAIC,EAAK,GAAIH,GAC5C,MAAM,OAAN,OAAcI,EAAd,aAAoBC,EAApB,aAA0BhG,EAA1B,MAGIiG,GAEU,CAAC,IAAK,GAAI,IAFpBA,GAGS,CAAC,GAAI,IAAK,IAHnBA,GAIS,CAAC,IAAK,GAAI,GAgCVC,GA7BwD,SAAC,GAGjE,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEM9D,EAAQ8B,IAAMiC,SAClB,kBACED,EACID,EAAU,GACRP,GAAWK,GAAoBA,GAAqBE,EAAU,KAC9DP,GAAWK,GAAoBA,GAAoBE,EAAU,KAC/DA,EAAU,GACVP,GAAWK,GAAqBA,GAAoBE,EAAU,KAC9DP,GAAWK,GAAoBA,GAAoBE,EAAU,MACnE,CAACC,EAAYD,IAGf,OACE,qBAAK1E,UAAW2E,EAAa,kBAAoB,aAAjD,SACE,qBACE1E,MAAO,CACL4E,WAAYH,EAAU,EAAI,UAAY,SACtCnF,MAAM,GAAD,OAAKmF,EAAL,KACLhE,gBAAiBG,EACjBgD,WAAW,cAAD,OAAgB,GAAhB,iBAAoC,GAApC,gB,kBC9CPiB,GAAeC,YAC1B,yBAD0C,uCAE1C,WACElJ,EADF,oBAAAyC,EAAA,6DAQI0G,EARJ,EAQIA,gBARJ,kBAW2BhE,EAAkB,YAAanF,GAX1D,QAaqB,KAFXoJ,EAXV,SAcMD,EAAgBC,GAdtB,gDAiBID,GAAgB,GAjBpB,yDAF0C,yDCA/BE,GAAUH,YACrB,oBADqC,uCAErC,WACElJ,EADF,oBAAAyC,EAAA,6DAQI0G,EARJ,EAQIA,gBARJ,kBAW2BhE,EAAkB,UAAWnF,GAXxD,QAaqB,KAFXoJ,EAXV,SAcMD,EAAgBC,GAdtB,gDAiBID,GAAgB,GAjBpB,yDAFqC,yDCsHxBG,GAxG4B,SAAC,GAAyC,IAAD,MAAtCpJ,EAAsC,EAAtCA,UAAWP,EAA2B,EAA3BA,KAAM4J,EAAqB,EAArBA,eACvDhL,EAASiD,EAAeP,GAE9B,EAA+BuI,cAC7B,iBAAO,CACLvL,KAAM,OACNwL,QAAS,SAAC3G,GAAD,MAAc,CACrBmB,WAAYnB,EAAQmB,eAEtBtE,KAAM,kBACJ9C,EAAe8C,EAAMO,EAAUjC,OAASrB,EAAcqC,MAClD,CACEiB,UAAWA,EAAUjC,KACrB0B,KAAM,CACJ1C,KAAM0C,EAAK1C,KACXH,KAAM6C,EAAK7C,OAGf,MACN4M,SAAUnL,KAEZ,CAACA,EAAQ2B,EAAWP,IAlBtB,mBAASsE,EAAT,KAASA,WAAc0F,EAAvB,KAqBA,EAA2BC,cACzB,iBAAO,CACLC,OAAQ,OACRJ,QAAS,SAAC3G,GAAD,MAAc,CACrBgH,OAAQhH,EAAQgH,WAElBC,KAAM,SAAC1G,GAAD,OACJA,EAAOnD,YAActD,EAAcqC,KCtCtB,SAACoE,EAAoB2G,GACxC,IAAmB3M,EAAU6D,EAAM+I,WAA3B/J,UAEF1C,EAAkBH,EAAMM,eACxBC,EAAkBP,EAAMK,cAExBwM,EAAa1M,EAAgBY,MAAMiF,EAAO1D,KAAK7C,KAAO,GAE5D,GAAKD,EAAeqN,GAKpB,GAAyB,IAArBA,EAAW/M,MAOf,QAAmBH,IAFAqK,EAAM6C,EAAWjN,MAEpC,CAKA,IAAMkN,EAAavM,EAAgBQ,MAAM4L,EAAOrK,KAAK7C,KAAO,GAE5D,QAAmBE,IAAfmN,EAAJ,CAKA,IAAMhN,EACiB,IAArBE,EAAMgB,WACF6L,EAAW/M,OACTE,EAAMgB,WAAa6L,EAAW/M,MAC5B+M,EAAW/M,MAEbE,EAAMgB,WACR,EAEA2B,EAAO,CACXpB,SAAUsL,EACVpL,OAAQqL,EACRtL,SAAUrB,EAAgBS,KAC1Bc,OAAQnB,EAAgBK,KACxBd,MAAOA,GAGT,IAAKuE,IAAgB,CACnB,IAAM0I,EAAUlJ,EAAMmJ,SACpBhB,GAAQ,2BACHrJ,GADE,IAELpB,SAAUsL,EAAWpN,KACrBgC,OAAQqL,EAAWrN,SAIvB2H,IAAM2F,QAAQA,EAAS,CACrBE,QAAS,kBACTC,QAAS,YACTC,MAAO,gBAjCT/F,IAAM+F,MAAN,8BAPA/F,IAAM+F,MAAN,eAAoBN,EAAWjN,KAA/B,0BAPAwH,IAAM+F,MAAM,qBALZ/F,IAAM+F,MAAN,eAAoBN,EAAWpN,KAA/B,wBD8BQ2N,CAAMpH,EAAQ,CACZnD,UAAWA,EAAUjC,KACrB0B,KAAM,CACJ7C,KAAM6C,EAAK7C,QE1CL,SAACuG,EAAoB2G,GACzC,IAAmB3M,EAAU6D,EAAM+I,WAA3B/J,UAER,EAA6C9C,EAC3CC,EACAgG,EAAOnD,UAFsD,OAG7D8J,QAH6D,IAG7DA,OAH6D,EAG7DA,EAAQ9J,WAHF1C,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,gBAMnBsM,EAAa1M,EAAgBY,MAAMiF,EAAO1D,KAAK7C,KAAO,GAEtD4N,EAAarD,EAAM6C,EAAWjN,MAEpC,QAAmBD,IAAf0N,EACF,MAAM,IAAIC,MAAJ,UAAaT,EAAWjN,KAAxB,0BAGR,IAAMkN,EAAaH,EACfpM,EAAgBQ,MAAM4L,EAAOrK,KAAK7C,KAAO,GrBlBd,SAAC6C,EAAYK,EAAgB5B,GAC5D,OAAK4B,EAAKyH,OAEYrJ,EAAMsB,MAC1B,SAACsK,GAAD,OAAYA,EAAO/M,OAAS0C,EAAK1C,MAAQ+M,EAAOY,WAAajL,EAAKiL,aAH5CxM,EAAMsB,MAAK,SAACsK,GAAD,YAA4BhN,IAAhBgN,EAAO/M,QqBkBlD4N,CAAkBX,EAAYQ,EAAY9M,EAAgBQ,OAE9D,QAAmBpB,IAAfmN,EACF,MAAM,IAAIQ,MAAM,0BAGlB,IAAMxN,EACJE,EAAMiB,cAAgB4L,EAAW/M,MAAQ,EACrC2N,KAAKC,MAAMb,EAAW/M,MAAQ,GACT,IAArBE,EAAMgB,YAAoBhB,EAAMgB,WAAa6L,EAAW/M,MACxD+M,EAAW/M,MACXE,EAAMgB,WAEN2B,EAAO,CACXpB,SAAUsL,EACVpL,OAAQqL,EACRtL,SAAUrB,EAAgBS,KAC1Bc,OAAQnB,EAAgBK,KACxBd,MAAOA,GAGT,IAAKuE,IAAgB,CACnB,IAAM0I,EAAUlJ,EAAMmJ,SACpBpB,GAAa,2BACRjJ,GADO,IAEVpB,SAAUsL,EAAWpN,KACrBgC,OAAQqL,EAAWrN,SAIvB2H,IAAM2F,QAAQA,EAAS,CACrBE,QAAS,aACTC,QAAS,YACTC,MAAO,UAIX3N,EAAesN,GAAY,GACvBO,EAAWjD,OrB5DO,SAACyC,EAAkBC,GAAnB,OACtBD,EAAWjN,OAASkN,EAAWlN,MAAQiN,EAAWU,WAAaT,EAAWS,SqB2DlDI,CAASd,EAAYC,GACvCjJ,EAAMmJ,SACJ5L,EAAW,2BACNuB,GADK,IAERlB,OAAQqL,MAGZjJ,EAAMmJ,SACJnL,EAAU,2BACLc,GADI,IAEPlB,OAAQqL,MAGdjJ,EAAMmJ,SAASzK,EAAUI,IFzBnBiL,CAAO5H,EAAQ,CACbnD,UAAWA,EAAUjC,KACrB0B,KAAM,CACJ7C,KAAM6C,EAAK7C,SAGrBoO,QAAS,SAAC7H,GAAD,OACN9E,IACA8E,EAAO1D,KAAK7C,OAAS6C,EAAK7C,MAAQuG,EAAOnD,YAAcA,EAAUjC,OAClEiC,EAAUjC,OAASrB,EAAcqC,SAErC,CAACV,EAAQ2B,EAAWP,IAzBtB,mBAASmK,EAAT,KAASA,OAAUC,EAAnB,KA8BMoB,EAAerE,IAAMI,aACzB,kBAAMrK,EAAe8C,IAAS4J,EAAe5J,KAC7C,CAACA,EAAM4J,IAGH6B,EAAetE,IAAMI,aACzB,kBAAMrK,EAAe8C,IAAS4J,OAAevM,KAC7C,CAAC2C,EAAM4J,IAGT,OACE,mCACE,qBACErF,IAfa,SAACL,GAAD,OAA6B8F,EAAKI,EAAKlG,KAgBpDM,UAAU,iBACVC,MAAO,CACL0D,QAAS7D,EAAa,GAAM,EAC5BK,gBAAiB,cAAOC,aAAA,kBAAoC5E,EAAK1C,KAAzC,QAAP,OAAiE,EAClFoO,OAAQvB,EAAS,qCAAuC,6BAE1DqB,aAAcA,EACdC,aAAcA,EAThB,SAWGvO,EAAe8C,IACd,qCACE,qBAAKwE,UAAU,aAAf,SACE,iCACGxE,EAAKzC,QAAU,IAAf,WACOyC,EAAKzC,OAAS,KAAMoO,eAAe,QAAS,CAC9CC,sBAAuB,IAF5B,gBAIM5L,EAAKzC,OAAOoO,eAAe,QAAS,CACrCC,sBAAuB,IAL5B,KAMU,IAPb,UAQG5L,EAAKxC,aARR,aAQG,EAAYmO,eAAe,SAR9B,UAWD,UAAA3L,EAAKiL,gBAAL,eAAe9B,aACd,cAAC,GAAD,CAAWD,QAASlJ,EAAKiL,SAAS9B,WAAYA,YAAU,IAE1D,sBAAK3E,UAAU,aAAf,cACIxE,EAAK7C,KADT,MACiB,UAAAuK,EAAM1H,EAAK1C,aAAX,eAAkBuK,QAAS,sBG7CzCgE,GA5D2C,SAAC,GAAmB,IAAD,EAAhBtL,EAAgB,EAAhBA,UAC3D,EAAsC4G,IAAMZ,WAA5C,mBAAOuF,EAAP,KAAoBlC,EAApB,KAEMrM,EAAS4J,IAAMiC,SACnB,uBAC0B/L,IAAxBkD,EAAU/B,UACN+B,EAAU9B,MAAMsN,QACd,SAACC,EAAa7O,GAAd,OACEA,EAAKI,OAASyO,EAAc7O,EAAKI,OAASyO,IAC5C,GAEF,IACN,CAACzL,EAAU/B,UAAW+B,EAAU9B,QAGlC,OACE,sBAAK+F,UAAU,iBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,8BACGjE,EAAUsH,OAAV,UAAsBtH,EAAUsH,MAAhC,MACAtH,EAAUlC,MAEZkC,EAAU/B,WACT,gCACGjB,EAAS,IADZ,IACmBgD,EAAU/B,UAAY,IADzC,WAKJ,cAAC,GAAD,CACE0K,QAAS3I,EAAU/B,UAAajB,EAASgD,EAAU/B,UAAa,IAAM,IAExE,qBAAKgG,UAAU,iBAAf,SACGjE,EAAU9B,MAAMwN,KAAI,SAACjM,GAAD,OACnB,cAAC,GAAD,CAEEA,KAAMA,EACNO,UAAWA,EACXqJ,eAAgBA,GAJlB,UACUrJ,EAAUjC,KADpB,YAC4BiC,EAAUlC,GADtC,YAC4C2B,EAAK7C,YAQrD,8BACE,cAAC,GAAD,CACEiL,aAAyB/K,IAAhByO,EACT9G,SAAU,IACVR,UAAU,YAHZ,SAKGsH,GACC,qCACE,6BAAI,UAAApE,EAAMoE,EAAYxO,aAAlB,eAAyBuK,QAAS,aACtC,oBAAIpD,MAAO,CAAEyH,aAAc,sB,kBC7CnCC,GAGD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACnB,OACE,sBACE7H,UAAU,YACVC,MAAO,CAAE4E,WAAY+C,EAAc,UAAY,UAFjD,UAIE,cAAC,KAAD,CACEE,KAAMC,KACNC,QAAS,kBAAMH,GAAe,IAC9B7H,UAAU,mBAEZ,iDACA,+FACA,+EACA,8GAIA,4DACA,sBACEA,UAAU,UACVgI,QAAS,kBACP3H,EAAO,CAAEE,KAAM,kEAHnB,8BAmES0H,GAvDoB,WACjC,IAAM/N,EAAamD,EAAeR,GAC5BqJ,EAAW/I,IAEjB,EAAsC4E,oBAAS,GAA/C,mBAAO6F,EAAP,KAAoBC,EAApB,KAEA,EAAgBpC,cAA+B,iBAAO,CACpDC,OAAQ,OACRE,KAAM,SAAC1G,GCjDT8B,EAAS,UDiDiB9B,EAAO1D,WAFxB0M,EAAT,oBAKA,EAAiBzC,cACf,iBAAO,CACLC,OAAQ,OACRE,KAAM,SAAC1G,GAAD,OE1DW1D,EF0DQ0D,EAAO1D,UEzDpC8E,IAAM8F,QAAN,eAAsB5K,EAAK1C,OADP,IAAC0C,MF4DnB,CAACtB,IALMiO,EAAT,oBAYA,OACE,qCACE,cAAC,GAAD,CAAMvE,QAASgE,EAAapH,SAAU,IAAMR,UAAU,YAAtD,SACE,cAAC,GAAD,CAAY4H,YAAaA,EAAaC,eAAgBA,MAExD,sBAAK7H,UAAU,iBAAiBC,MAAO,CAAEmI,OAAQ,OAAjD,UACE,uBACEtO,KAAK,SACLkG,UAAU,eACVqI,IAAK,EACLC,aAAcpO,EACdqO,SAfa,SAACtK,GACpBiI,EAASlK,EAAciC,EAAM4H,OAAO2C,mBAgBhC,wBAAQzI,IAAKmI,EAAKlI,UAAU,SAA5B,iBAGA,wBAAQD,IAAKoI,EAAMnI,UAAU,SAA7B,kBAGA,wBAAQA,UAAU,SAASgI,QAAS,kBAAMhH,EAAS,SAAnD,mBAGA,qBAAKhB,UAAU,YAAf,SACE,wBAAQgI,QAAS,kBAAMH,GAAe,IAAtC,SACE,cAAC,KAAD,CAAiBC,KAAMW,kBG9BpBC,GAxDsC,SAAC,GAAe,IAAbzO,EAAY,EAAZA,MACtD,EAA0C8H,oBAAS,GAAnD,mBAAO4G,EAAP,KAAsBC,EAAtB,KAGA,EAA4B7G,qBAA5B,mBAAO8G,EAAP,KAAeC,EAAf,KAWA,OAVAnL,EAAY,gBAAgB,WACtBgL,EACFC,GAAiB,IAEbC,GAAQE,aAAaF,GACzBD,GAAiB,GACjBE,EAAUxG,YAAW,kBAAMsG,GAAiB,KAAQ,UAKtD,qBAAK5I,UAAU,iBAAf,SACE,cAAC,GAAD,CAAM4D,QAAS+E,EAAe3I,UAAU,cAAxC,SACG/F,EAAMwN,KAAI,SAACjM,GAAD,iBACT,qBACEwE,UAAU,iBACVC,MAAO,CACLE,gBACE,cAAOC,aAAA,kBAAoC5E,EAAK1C,KAAzC,QAAP,OAAiE,GAJvE,SAQGJ,EAAe8C,IACd,qCACE,qBAAKwE,UAAU,aAAf,SACE,iCACGxE,EAAKzC,QAAU,IAAf,WACOyC,EAAKzC,OAAS,KAAMoO,eAAe,QAAS,CAC9CC,sBAAuB,IAF5B,gBAIM5L,EAAKzC,OAAOoO,eAAe,QAAS,CACrCC,sBAAuB,IAL5B,KAMU,IAPb,UAQG5L,EAAKxC,aARR,aAQG,EAAYmO,eAAe,SAR9B,UAWD,UAAA3L,EAAKiL,gBAAL,eAAe9B,aACd,cAAC,GAAD,CAAWD,QAASlJ,EAAKiL,SAAS9B,WAAYA,YAAU,IAE1D,sBAAK3E,UAAU,aAAf,cACIxE,EAAK7C,KADT,MACiB,UAAAuK,EAAM1H,EAAK1C,aAAX,eAAkBuK,QAAS,kBA1BlD,iBAMiB7H,EAAK7C,eC3B1BqQ,GAAgB,CAAC,UCwCRC,GA/Ba,WAC1B,MAAgDtG,IAAMZ,UAAS,GAA/D,mBAAOmH,EAAP,KAAyBC,EAAzB,KAEAxL,EAAqB,sBAAuBwL,GAC5CxL,EAAmB,iBAAkBwL,GDVR,SAACC,GAC9B,IAAMC,EAAYvL,iBAA2BJ,GAE7CK,qBAAU,WACRsL,EAAU9M,QAAU6M,IACnB,CAACA,IAEJrL,qBAAU,WACR,IAAMuL,EAAa,SAACC,GACdP,GAAcQ,SAASD,EAAEE,QAC3BJ,EAAU9M,SAAQ,GAClByE,EAAS,UAMb,OAFAxD,OAAOW,iBAAiB,QAASmL,GAE1B,kBAAM9L,OAAOY,oBAAoB,QAASkL,MAChD,ICPHI,CAAgBP,GAEhB,IAAM5P,EAAgB8D,EAAeV,GAC/BnD,EAAiB6D,EAAeT,GAEhCsJ,EAAW/I,IASjB,OAPAQ,EAAY,kBAAkB,SAAC9B,GAC7BqK,EAASlL,EAAea,KACvBqN,GAAoBC,GAAoB,MAG3CxL,EAAY,gBAAgB,SAAC9B,GAAD,OAAUqK,EAASxK,EAAaG,OAG1D,qCACE,eAAC,GAAD,CAAM+H,QAASsF,EAAkBlJ,UAAU,iBAA3C,UACE,cAAC,GAAD,CAAejE,UAAWxC,IAC1B,cAAC,GAAD,IACA,cAAC,GAAD,CAAewC,UAAWvC,OAE5B,cAAC,GAAD,CAAiBS,MAAOV,EAAcU,MAAM0P,MAAM,EAAG,SCuB5CC,GAzBO,WACpBjM,EAA0B,SAAS,SAAC1D,GAClC,cAA2BoB,OAAOwO,QAAQ5P,GAA1C,eAAkD,CAA7C,0BAAOnB,EAAP,KAAa+C,EAAb,KACHqH,EAAMpK,GAAQ+C,MAIlB,IAAM1B,EAAesI,EAAY,SAE3ByD,EAAW/I,IAMjB,OAJAwF,IAAM5E,WAAU,WACdmI,EAASjK,EAAgB9B,MACxB,CAACA,EAAc+L,IAGhB,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,Q,MClDN4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjN,MAAOA,EAAjB,SACE,cAACkN,EAAA,EAAD,CAAaC,QAASC,IAAcjJ,QAAS,CAAEkJ,mBAAmB,GAAlE,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.b831a995.chunk.js","sourcesContent":["import { Slot } from './slot';\n\nexport enum InventoryType {\n  PLAYER = 'player',\n  SHOP = 'shop',\n}\n\nexport type Inventory = {\n  id: string;\n  type: string;\n  slots: number;\n  items: Slot[];\n  maxWeight?: number;\n  label?: string;\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { State, Slot, InventoryType } from '../typings';\n\nexport const refreshSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<\n    { item: Slot; inventory?: InventoryType }[] | { item: Slot; inventory?: InventoryType }\n  >\n> = (state, action) => {\n  if (!Array.isArray(action.payload)) action.payload = [action.payload];\n\n  Object.values(action.payload)\n    .filter((data) => !!data)\n    .forEach((data) => {\n      const targetInventory = data.inventory\n        ? data.inventory !== InventoryType.PLAYER\n          ? state.rightInventory\n          : state.leftInventory\n        : state.leftInventory;\n      targetInventory.items[data.item.slot - 1] = data.item;\n    });\n};\n","//import { Items } from \"../store/items\";\nimport { Inventory, State, Slot, SlotWithItem, InventoryType, ItemData } from '../typings';\n\nexport const isSlotWithItem = (slot: Slot, strict: boolean = false): slot is SlotWithItem =>\n  (slot.name !== undefined && slot.weight !== undefined) ||\n  (strict && slot.name !== undefined && slot.count !== undefined && slot.weight !== undefined);\n\nexport const canStack = (sourceSlot: Slot, targetSlot: Slot) =>\n  sourceSlot.name === targetSlot.name && sourceSlot.metadata === targetSlot.metadata;\n\nexport const findAvailableSlot = (item: Slot, data: ItemData, items: Slot[]) => {\n  if (!data.stack) return items.find((target) => target.name === undefined);\n\n  const stackableSlot = items.find(\n    (target) => target.name === item.name && target.metadata === item.metadata,\n  );\n\n  return stackableSlot || items.find((target) => target.name === undefined);\n};\n\nexport const getTargetInventory = (\n  state: State,\n  sourceType: Inventory['type'],\n  targetType?: Inventory['type'],\n): { sourceInventory: Inventory; targetInventory: Inventory } => ({\n  sourceInventory: sourceType === InventoryType.PLAYER ? state.leftInventory : state.rightInventory,\n  targetInventory: targetType\n    ? targetType === InventoryType.PLAYER\n      ? state.leftInventory\n      : state.rightInventory\n    : sourceType === InventoryType.PLAYER\n    ? state.rightInventory\n    : state.leftInventory,\n});\n","import {\n  createSlice,\n  current,\n  isFulfilled,\n  isPending,\n  isRejected,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport type { RootState } from '.';\nimport { State } from '../typings';\nimport {\n  setupInventoryReducer,\n  refreshSlotsReducer,\n  stackSlotsReducer,\n  swapSlotsReducer,\n  moveSlotsReducer,\n} from '../reducers';\n\nconst initialState: State = {\n  leftInventory: {\n    id: '',\n    type: '',\n    slots: 0,\n    maxWeight: 0,\n    items: [],\n  },\n  rightInventory: {\n    id: '',\n    type: '',\n    slots: 0,\n    maxWeight: 0,\n    items: [],\n  },\n  itemAmount: 0,\n  shiftPressed: false,\n  isBusy: false,\n};\n\nexport const inventorySlice = createSlice({\n  name: 'inventory',\n  initialState,\n  reducers: {\n    stackSlots: stackSlotsReducer,\n    swapSlots: swapSlotsReducer,\n    setupInventory: setupInventoryReducer,\n    moveSlots: moveSlotsReducer,\n    refreshSlots: refreshSlotsReducer,\n    setItemAmount: (state, action: PayloadAction<number>) => {\n      state.itemAmount = action.payload;\n    },\n    setShiftPressed: (state, action: PayloadAction<boolean>) => {\n      state.shiftPressed = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(isPending, (state) => {\n      state.isBusy = true;\n\n      state.history = {\n        leftInventory: current(state.leftInventory),\n        rightInventory: current(state.rightInventory),\n      };\n    });\n    builder.addMatcher(isFulfilled, (state) => {\n      state.isBusy = false;\n    });\n    builder.addMatcher(isRejected, (state) => {\n      if (state.history && state.history.leftInventory && state.history.rightInventory) {\n        state.leftInventory = state.history.leftInventory;\n        state.rightInventory = state.history.rightInventory;\n      }\n      state.isBusy = false;\n    });\n  },\n});\n\nexport const {\n  setItemAmount,\n  setShiftPressed,\n  setupInventory,\n  swapSlots,\n  moveSlots,\n  stackSlots,\n  refreshSlots,\n} = inventorySlice.actions;\nexport const selectLeftInventory = (state: RootState) => state.inventory.leftInventory;\nexport const selectRightInventory = (state: RootState) => state.inventory.rightInventory;\nexport const selectItemAmount = (state: RootState) => state.inventory.itemAmount;\nexport const selectIsBusy = (state: RootState) => state.inventory.isBusy;\n\nexport default inventorySlice.reducer;\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory } from '../helpers';\nimport { Inventory, State, SlotWithItem, InventoryType } from '../typings';\n\nexport const stackSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: SlotWithItem;\n    toType: Inventory['type'];\n    count: number;\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\n\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n\n  const pieceWeight = fromSlot.weight / fromSlot.count;\n\n  targetInventory.items[toSlot.slot - 1] = {\n    ...targetInventory.items[toSlot.slot - 1],\n    count: toSlot.count + count,\n    weight: pieceWeight * (toSlot.count + count),\n  };\n\n  if (fromType === InventoryType.SHOP) return;\n\n  sourceInventory.items[fromSlot.slot - 1] =\n    fromSlot.count - count > 0\n      ? {\n          ...sourceInventory.items[fromSlot.slot - 1],\n          count: fromSlot.count - count,\n          weight: pieceWeight * (fromSlot.count - count),\n        }\n      : {\n          slot: fromSlot.slot,\n        };\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory } from '../helpers';\nimport { Inventory, State, SlotWithItem } from '../typings';\n\nexport const swapSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: SlotWithItem;\n    toType: Inventory['type'];\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType } = action.payload;\n\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n\n  [sourceInventory.items[fromSlot.slot - 1], targetInventory.items[toSlot.slot - 1]] = [\n    {\n      ...targetInventory.items[toSlot.slot - 1],\n      slot: fromSlot.slot,\n    },\n    {\n      ...sourceInventory.items[fromSlot.slot - 1],\n      slot: toSlot.slot,\n    },\n  ];\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { Inventory, State } from '../typings';\n\nexport const setupInventoryReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    leftInventory?: Inventory;\n    rightInventory?: Inventory;\n  }>\n> = (state, action) => {\n  const { leftInventory, rightInventory } = action.payload;\n\n  if (leftInventory)\n    state.leftInventory = {\n      ...leftInventory,\n      items: Array.from(\n        Array(leftInventory.slots),\n        (_, index) =>\n          Object.values(leftInventory.items).find((item) => item?.slot === index + 1) || {\n            slot: index + 1,\n          },\n      ),\n    };\n\n  if (rightInventory)\n    state.rightInventory = {\n      ...rightInventory,\n      items: Array.from(\n        Array(rightInventory.slots),\n        (_, index) =>\n          Object.values(rightInventory.items).find((item) => item?.slot === index + 1) || {\n            slot: index + 1,\n          },\n      ),\n    };\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory } from '../helpers';\nimport { Inventory, State, SlotWithItem, Slot, InventoryType } from '../typings';\n\nexport const moveSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: Slot;\n    toType: Inventory['type'];\n    count: number;\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\n\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n\n  const pieceWeight = fromSlot.weight / fromSlot.count;\n\n  targetInventory.items[toSlot.slot - 1] = {\n    ...sourceInventory.items[fromSlot.slot - 1],\n    count: count,\n    weight: pieceWeight * count,\n    slot: toSlot.slot,\n  };\n\n  if (fromType === InventoryType.SHOP) return;\n\n  sourceInventory.items[fromSlot.slot - 1] =\n    fromSlot.count - count > 0\n      ? {\n          ...sourceInventory.items[fromSlot.slot - 1],\n          count: fromSlot.count - count,\n          weight: pieceWeight * (fromSlot.count - count),\n        }\n      : {\n          slot: fromSlot.slot,\n        };\n};\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport inventoryReducer from './inventory';\n\nexport const store = configureStore({\n  reducer: {\n    inventory: inventoryReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// Will return whether the current environment is in a regular browser\n// and not CEF\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative;\n\n// Basic no operation function\nexport const noop = () => {};\n","import { MutableRefObject, useEffect, useRef } from 'react';\nimport { noop } from '../utils/misc';\n\ninterface NuiMessageData<T = unknown> {\n  action: string;\n  data: T;\n}\n\ntype NuiHandlerSignature<T> = (data: T) => void;\n\n/**\n * A hook that manage events listeners for receiving data from the client scripts\n * @param action The specific `action` that should be listened for.\n * @param handler The callback function that will handle data relayed by this hook\n *\n * @example\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\n *   // whatever logic you want\n * })\n *\n **/\n\nexport const useNuiEvent = <T = any>(action: string, handler: (data: T) => void) => {\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\n\n  // When handler value changes set mutable ref to handler val\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\n      const { action: eventAction, data } = event.data;\n\n      if (savedHandler.current) {\n        if (eventAction === action) {\n          savedHandler.current(data);\n        }\n      }\n    };\n\n    window.addEventListener('message', eventListener);\n    // Remove Event Listener on component cleanup\n    return () => window.removeEventListener('message', eventListener);\n  }, [action]);\n};\n\nexport default useNuiEvent;\n","import React, { RefObject, useRef } from \"react\";\nimport { DragLayerMonitor, useDragLayer, XYCoord } from \"react-dnd\";\nimport { DragSource } from \"../../typings\";\n\ninterface DragLayerProps {\n  data: DragSource;\n  currentOffset: XYCoord | null;\n  isDragging: boolean;\n}\n\nconst subtract = (a: XYCoord, b: XYCoord): XYCoord => {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  };\n};\n\nconst calculateParentOffset = (monitor: DragLayerMonitor): XYCoord => {\n  const client = monitor.getInitialClientOffset();\n  const source = monitor.getInitialSourceClientOffset();\n  if (\n    client === null ||\n    source === null ||\n    client.x === undefined ||\n    client.y === undefined\n  ) {\n    return { x: 0, y: 0 };\n  }\n  return subtract(client, source);\n};\n\nexport const calculatePointerPosition = (\n  monitor: DragLayerMonitor,\n  childRef: RefObject<Element>\n): XYCoord | null => {\n  const offset = monitor.getClientOffset();\n  if (offset === null) {\n    return null;\n  }\n\n  if (!childRef.current || !childRef.current.getBoundingClientRect) {\n    return subtract(offset, calculateParentOffset(monitor));\n  }\n\n  const bb = childRef.current.getBoundingClientRect();\n  const middle = { x: bb.width / 2, y: bb.height / 2 };\n  return subtract(offset, middle);\n};\n\nconst DragPreview: React.FC = () => {\n  const element = useRef<HTMLDivElement>(null);\n  const { data, isDragging, currentOffset } = useDragLayer<DragLayerProps>(\n    (monitor) => ({\n      data: monitor.getItem(),\n      currentOffset: calculatePointerPosition(monitor, element),\n      isDragging: monitor.isDragging(),\n    })\n  );\n\n  return (\n    <>\n      {isDragging && currentOffset && data.item && (\n        <div\n          ref={element}\n          className=\"drag\"\n          style={{\n            transform: `translate(${currentOffset.x}px, ${currentOffset.y}px)`,\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + `/images/${data.item.name}.png`\n            })`,\n          }}\n        ></div>\n      )}\n    </>\n  );\n};\n\nexport default DragPreview;\n","import React from \"react\";\nimport { useNuiEvent } from \"../../hooks/useNuiEvent\";\nimport { debugData } from \"../../utils/debugData\";\n\nimport toast, { Toaster, ToastPosition } from \"react-hot-toast\";\n\n// API - https://github.com/timolins/react-hot-toast\n\ndebugData([\n  {\n    action: \"showNotif\",\n    data: {\n      text: \"Info Notification\",\n    },\n  },\n]);\ndebugData([\n  {\n    action: \"showNotif\",\n    data: {\n      text: \"Success Notification\",\n      type: \"success\",\n    },\n  },\n]);\ndebugData([\n  {\n    action: \"showNotif\",\n    data: {\n      text: \"Error Notification\",\n      type: \"error\",\n    },\n  },\n]);\n\ninterface NotificationProps {\n  text: string;\n  type?: string;\n  position?: ToastPosition;\n  duration?: number;\n}\n\nconst Notify = (data: NotificationProps) => {\n  toast(data.text, {\n    duration: data.duration || 4000,\n    position: data.position || \"top-center\",\n    style: {\n      backgroundColor:\n        data.type === undefined\n          ? \"rgb(52, 152, 219)\"\n          : data.type === \"success\"\n          ? \"rgb(39, 174, 96)\"\n          : \"rgb(231, 76, 60)\",\n    },\n  });\n};\n\nconst Notifications: React.FC = () => {\n  useNuiEvent<NotificationProps>(\"showNotif\", (data) => {\n    Notify(data);\n  });\n\n  return (\n    <Toaster\n      toastOptions={{\n        // options defined here apply to all toasts\n        style: {\n          color: \"white\",\n          borderRadius: \"5px\",\n          padding: \"4px\",\n        },\n      }}\n    />\n  );\n};\n\nexport default Notifications;\nexport { Notify };\n","/**\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\n * can be extended to include AbortController if needed or if the response isn't\n * JSON. Tailor it to your needs.\n *\n * @param eventName - The endpoint eventname to target\n * @param data - Data you wish to send in the NUI Callback\n *\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\n */\n\nexport async function fetchNui<T = any>(eventName: string, data?: any): Promise<T> {\n  const options = {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  };\n\n  const resourceName = (window as any).GetParentResourceName\n    ? (window as any).GetParentResourceName()\n    : 'nui-frame-app';\n\n  const resp = await fetch(`https://${resourceName}/${eventName}`, options);\n\n  const respFormatted = await resp.json();\n\n  return respFormatted;\n}\n","import { useState } from \"react\";\nimport useNuiEvent from \"../../hooks/useNuiEvent\";\nimport { debugData } from \"../../utils/debugData\";\nimport { fetchNui } from \"../../utils/fetchNui\";\n\ndebugData([\n  {\n    action: \"startProgress\",\n    data: {\n      text: \"Using Water\",\n      duration: 5000,\n    },\n  },\n]);\n\n//TODO: maybe refactor depends on lua side\n\nconst ProgressBar: React.FC = () => {\n  const [duration, setDuration] = useState(0);\n  const [isVisible, setVisible] = useState(false);\n  const [isCancelled, setCancelled] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  useNuiEvent<{ text: string; duration: number }>(\"startProgress\", (data) => {\n    setText(data.text);\n    setDuration(data.duration);\n    setVisible(true);\n    setCancelled(false)\n  });\n\n  useNuiEvent(\"cancelProgress\", () => {\n    setCancelled(true);\n    setTimeout(() => setVisible(false), 1750);\n  });\n\n  return (\n    <>\n      {isVisible && (\n        <div className=\"progressBar\">\n          <div\n            className={isCancelled ? \"progressBar-cancel\" : \"progressBar-value\"}\n            style={{ animationDuration: `${duration}ms` }}\n            onAnimationEnd={() => {setVisible(false); fetchNui('ox_inventory:ProgressComplete')}}\n          >\n            <span>{text}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\n\nexport const useKeyPress = (targetKey: KeyboardEvent['key']) => {\n  const [keyPressed, setKeyPressed] = React.useState(false);\n\n  const downHandler = React.useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    },\n    [targetKey],\n  );\n\n  const upHandler = React.useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey],\n  );\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [downHandler, upHandler]);\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import { ItemData } from '../typings/item';\n\nexport const Items: {\n  [key: string]: ItemData | undefined;\n} = {\n  water: {\n    close: false,\n    label: 'VODA',\n    stack: true,\n    usable: true,\n  },\n  burger: {\n    close: false,\n    label: 'BURGR',\n    stack: false,\n    usable: false,\n  },\n};\n","import React from \"react\";\n\nconst Fade: React.FC<{ visible: boolean; duration?: number, className?: string }> = (props) => {\n  return (\n    <div\n      style={{\n        opacity: props.visible ? 1 : 0,\n        transition: `opacity ${props.duration || 0.2}s ease-out`,\n      }}\n      className={props.className}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Fade;\n","import React from \"react\";\n\nconst colorChannelMixer = (\n  colorChannelA: number,\n  colorChannelB: number,\n  amountToMix: number\n) => {\n  let channelA = colorChannelA * amountToMix;\n  let channelB = colorChannelB * (1 - amountToMix);\n  return channelA + channelB;\n};\n\nconst colorMixer = (rgbA: number[], rgbB: number[], amountToMix: number) => {\n  let r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);\n  let g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);\n  let b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nconst COLORS = {\n  // Colors used - https://materialui.co/flatuicolors\n  primaryColor: [231, 76, 60], // Red (Pomegranate)\n  secondColor: [39, 174, 96], // Green (Nephritis)\n  accentColor: [211, 84, 0], // Orange (Oragne)\n};\n\nconst WeightBar: React.FC<{ percent: number; durability?: boolean }> = ({\n  percent,\n  durability,\n}) => {\n  const color = React.useMemo(\n    () =>\n      durability\n        ? percent < 50\n          ? colorMixer(COLORS.accentColor, COLORS.primaryColor, percent / 100)\n          : colorMixer(COLORS.secondColor, COLORS.accentColor, percent / 100)\n        : percent > 50\n        ? colorMixer(COLORS.primaryColor, COLORS.accentColor, percent / 100)\n        : colorMixer(COLORS.accentColor, COLORS.secondColor, percent / 50),\n    [durability, percent]\n  );\n\n  return (\n    <div className={durability ? \"item-durability\" : \"weight-bar\"}>\n      <div\n        style={{\n          visibility: percent > 0 ? \"visible\" : \"hidden\",\n          width: `${percent}%`,\n          backgroundColor: color,\n          transition: `background ${0.3}s ease, width ${0.3}s ease`,\n        }}\n      ></div>\n    </div>\n  );\n};\nexport default WeightBar;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchNui } from '../utils/fetchNui';\n\nexport const validateMove = createAsyncThunk(\n  'inventory/validateMove',\n  async (\n    data: {\n      fromSlot: number;\n      fromType: string;\n      toSlot: number;\n      toType: string;\n      count: number;\n    },\n    { rejectWithValue },\n  ) => {\n    try {\n      const response = await fetchNui<boolean>('swapItems', data);\n\n      if (response === false) {\n        rejectWithValue(response);\n      }\n    } catch (error) {\n      rejectWithValue(false);\n    }\n  },\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchNui } from '../utils/fetchNui';\n\nexport const buyItem = createAsyncThunk(\n  'inventory/buyItem',\n  async (\n    data: {\n      fromSlot: number;\n      fromType: string;\n      toSlot: number;\n      toType: string;\n      count: number;\n    },\n    { rejectWithValue },\n  ) => {\n    try {\n      const response = await fetchNui<boolean>('buyItem', data);\n\n      if (response === false) {\n        rejectWithValue(response);\n      }\n    } catch (error) {\n      rejectWithValue(false);\n    }\n  },\n);\n","import React from 'react';\nimport { DragSource, Inventory, InventoryType, Slot, SlotWithItem } from '../../typings';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useAppSelector } from '../../store';\nimport WeightBar from '../utils/WeightBar';\nimport { onDrop } from '../../dnd/onDrop';\nimport { onBuy } from '../../dnd/onBuy';\nimport { selectIsBusy } from '../../store/inventory';\nimport { Items } from '../../store/items';\nimport { isSlotWithItem } from '../../helpers';\n\ninterface SlotProps {\n  inventory: Inventory;\n  item: Slot;\n  setCurrentItem: React.Dispatch<React.SetStateAction<SlotWithItem | undefined>>;\n}\n\nconst InventorySlot: React.FC<SlotProps> = ({ inventory, item, setCurrentItem }) => {\n  const isBusy = useAppSelector(selectIsBusy);\n\n  const [{ isDragging }, drag] = useDrag<DragSource, void, { isDragging: boolean }>(\n    () => ({\n      type: 'SLOT',\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n      item: () =>\n        isSlotWithItem(item, inventory.type !== InventoryType.SHOP)\n          ? {\n              inventory: inventory.type,\n              item: {\n                name: item.name,\n                slot: item.slot,\n              },\n            }\n          : null,\n      canDrag: !isBusy,\n    }),\n    [isBusy, inventory, item],\n  );\n\n  const [{ isOver }, drop] = useDrop<DragSource, void, { isOver: boolean }>(\n    () => ({\n      accept: 'SLOT',\n      collect: (monitor) => ({\n        isOver: monitor.isOver(),\n      }),\n      drop: (source) =>\n        source.inventory === InventoryType.SHOP\n          ? onBuy(source, {\n              inventory: inventory.type,\n              item: {\n                slot: item.slot,\n              },\n            })\n          : onDrop(source, {\n              inventory: inventory.type,\n              item: {\n                slot: item.slot,\n              },\n            }),\n      canDrop: (source) =>\n        !isBusy &&\n        (source.item.slot !== item.slot || source.inventory !== inventory.type) &&\n        inventory.type !== InventoryType.SHOP,\n    }),\n    [isBusy, inventory, item],\n  );\n\n  const connectRef = (element: HTMLDivElement) => drag(drop(element));\n\n  const onMouseEnter = React.useCallback(\n    () => isSlotWithItem(item) && setCurrentItem(item),\n    [item, setCurrentItem],\n  );\n\n  const onMouseLeave = React.useCallback(\n    () => isSlotWithItem(item) && setCurrentItem(undefined),\n    [item, setCurrentItem],\n  );\n\n  return (\n    <>\n      <div\n        ref={connectRef}\n        className=\"item-container\"\n        style={{\n          opacity: isDragging ? 0.4 : 1.0,\n          backgroundImage: `url(${process.env.PUBLIC_URL + `/images/${item.name}.png`})` || 'none',\n          border: isOver ? '0.1vh dashed rgba(255,255,255,0.5)' : '0.1vh inset rgba(0,0,0,0)',\n        }}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        {isSlotWithItem(item) && (\n          <>\n            <div className=\"item-count\">\n              <span>\n                {item.weight >= 1000\n                  ? `${(item.weight / 1000).toLocaleString('en-us', {\n                      minimumFractionDigits: 2,\n                    })}kg`\n                  : `${item.weight.toLocaleString('en-us', {\n                      minimumFractionDigits: 0,\n                    })}g`}{' '}\n                {item.count?.toLocaleString('en-us')}x\n              </span>\n            </div>\n            {item.metadata?.durability && (\n              <WeightBar percent={item.metadata.durability} durability />\n            )}\n            <div className=\"item-label\">\n              [{item.slot}] {Items[item.name]?.label || 'NO LABEL'}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InventorySlot;\n","import { isSlotWithItem, findAvailableSlot, getTargetInventory, canStack } from '../helpers';\nimport { validateMove } from '../thunks/validateItems';\nimport { store } from '../store';\nimport { DragSource, DropTarget, InventoryType, SlotWithItem } from '../typings';\nimport { moveSlots, stackSlots, swapSlots } from '../store/inventory';\nimport toast from 'react-hot-toast';\nimport { Items } from '../store/items';\nimport { buyItem } from '../thunks/buyItem';\nimport { isEnvBrowser } from '../utils/misc';\n\nexport const onBuy = (source: DragSource, target: DropTarget) => {\n  const { inventory: state } = store.getState();\n\n  const sourceInventory = state.rightInventory;\n  const targetInventory = state.leftInventory;\n\n  const sourceSlot = sourceInventory.items[source.item.slot - 1];\n\n  if (!isSlotWithItem(sourceSlot)) {\n    toast.error(`Item ${sourceSlot.slot} name === undefined`);\n    return;\n  }\n\n  if (sourceSlot.count === 0) {\n    toast.error('Out of stock');\n    return;\n  }\n\n  const sourceData = Items[sourceSlot.name];\n\n  if (sourceData === undefined) {\n    toast.error(`Item ${sourceSlot.name} data undefined!`);\n    return;\n  }\n\n  const targetSlot = targetInventory.items[target.item.slot - 1];\n\n  if (targetSlot === undefined) {\n    toast.error(`Target slot undefined`);\n    return;\n  }\n\n  const count =\n    state.itemAmount !== 0\n      ? sourceSlot.count\n        ? state.itemAmount > sourceSlot.count\n          ? sourceSlot.count\n          : state.itemAmount\n        : state.itemAmount\n      : 1;\n\n  const data = {\n    fromSlot: sourceSlot,\n    toSlot: targetSlot,\n    fromType: sourceInventory.type,\n    toType: targetInventory.type,\n    count: count,\n  };\n\n  if (!isEnvBrowser()) {\n    const promise = store.dispatch(\n      buyItem({\n        ...data,\n        fromSlot: sourceSlot.slot,\n        toSlot: targetSlot.slot,\n      }),\n    );\n\n    toast.promise(promise, {\n      loading: 'VALIDATING SHOP',\n      success: 'VALIDATED',\n      error: 'ERROR',\n    });\n  }\n};\n","import { isSlotWithItem, findAvailableSlot, getTargetInventory, canStack } from '../helpers';\nimport { validateMove } from '../thunks/validateItems';\nimport { store } from '../store';\nimport { DragSource, DropTarget, InventoryType, SlotWithItem } from '../typings';\nimport { moveSlots, stackSlots, swapSlots } from '../store/inventory';\nimport toast from 'react-hot-toast';\nimport { Items } from '../store/items';\nimport { buyItem } from '../thunks/buyItem';\nimport { isEnvBrowser } from '../utils/misc';\n\nexport const onDrop = (source: DragSource, target?: DropTarget) => {\n  const { inventory: state } = store.getState();\n\n  const { sourceInventory, targetInventory } = getTargetInventory(\n    state,\n    source.inventory,\n    target?.inventory,\n  );\n\n  const sourceSlot = sourceInventory.items[source.item.slot - 1] as SlotWithItem;\n\n  const sourceData = Items[sourceSlot.name];\n\n  if (sourceData === undefined) {\n    throw new Error(`${sourceSlot.name} item data undefined!`);\n  }\n\n  const targetSlot = target\n    ? targetInventory.items[target.item.slot - 1]\n    : findAvailableSlot(sourceSlot, sourceData, targetInventory.items);\n\n  if (targetSlot === undefined) {\n    throw new Error('Target slot undefined!');\n  }\n\n  const count =\n    state.shiftPressed && sourceSlot.count > 1\n      ? Math.floor(sourceSlot.count / 2)\n      : state.itemAmount === 0 || state.itemAmount > sourceSlot.count\n      ? sourceSlot.count\n      : state.itemAmount;\n\n  const data = {\n    fromSlot: sourceSlot,\n    toSlot: targetSlot,\n    fromType: sourceInventory.type,\n    toType: targetInventory.type,\n    count: count,\n  };\n\n  if (!isEnvBrowser()) {\n    const promise = store.dispatch(\n      validateMove({\n        ...data,\n        fromSlot: sourceSlot.slot,\n        toSlot: targetSlot.slot,\n      }),\n    );\n\n    toast.promise(promise, {\n      loading: 'VALIDATING',\n      success: 'VALIDATED',\n      error: 'ERROR',\n    });\n  }\n\n  isSlotWithItem(targetSlot, true)\n    ? sourceData.stack && canStack(sourceSlot, targetSlot)\n      ? store.dispatch(\n          stackSlots({\n            ...data,\n            toSlot: targetSlot,\n          }),\n        )\n      : store.dispatch(\n          swapSlots({\n            ...data,\n            toSlot: targetSlot,\n          }),\n        )\n    : store.dispatch(moveSlots(data));\n};\n","import React from \"react\";\nimport { Items } from \"../../store/items\";\nimport { Inventory, SlotWithItem } from \"../../typings\";\nimport Fade from \"../utils/Fade\";\nimport WeightBar from \"../utils/WeightBar\";\nimport InventorySlot from \"./InventorySlot\";\n\nconst InventoryGrid: React.FC<{ inventory: Inventory }> = ({ inventory }) => {\n  const [currentItem, setCurrentItem] = React.useState<SlotWithItem>();\n\n  const weight = React.useMemo(\n    () =>\n      inventory.maxWeight !== undefined\n        ? inventory.items.reduce<number>(\n            (totalWeight, slot) =>\n              slot.weight ? totalWeight + slot.weight : totalWeight,\n            0\n          )\n        : 0,\n    [inventory.maxWeight, inventory.items]\n  );\n\n  return (\n    <div className=\"column-wrapper\">\n      <div className=\"inventory-label\">\n        <p>\n          {inventory.label && `${inventory.label} -`}\n          {inventory.id}\n        </p>\n        {inventory.maxWeight && (\n          <div>\n            {weight / 1000}/{inventory.maxWeight / 1000}kg\n          </div>\n        )}\n      </div>\n      <WeightBar\n        percent={inventory.maxWeight ? (weight / inventory.maxWeight) * 100 : 0}\n      />\n      <div className=\"inventory-grid\">\n        {inventory.items.map((item) => (\n          <InventorySlot\n            key={`${inventory.type}-${inventory.id}-${item.slot}`}\n            item={item}\n            inventory={inventory}\n            setCurrentItem={setCurrentItem}\n          />\n        ))}\n      </div>\n\n      <div>\n        <Fade\n          visible={currentItem !== undefined}\n          duration={0.25}\n          className=\"item-info\"\n        >\n          {currentItem && (\n            <>\n              <p>{Items[currentItem.name]?.label || \"NO LABEL\"}</p>\n              <hr style={{ borderBottom: \"0.1vh\" }}></hr>\n            </>\n          )}\n        </Fade>\n      </div>\n    </div>\n  );\n};\n\nexport default InventoryGrid;\n","import React, { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { selectItemAmount, setItemAmount } from \"../../store/inventory\";\nimport { DragSource } from \"../../typings\";\nimport { onUse } from \"../../dnd/onUse\";\nimport { onGive } from \"../../dnd/onGive\";\nimport { fetchNui } from \"../../utils/fetchNui\";\nimport { faInfoCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Fade from \"../utils/Fade\";\nimport { Notify } from \"../utils/Notifications\";\n\nconst InfoScreen: React.FC<{\n  infoVisible: boolean;\n  setInfoVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}> = ({ infoVisible, setInfoVisible }) => {\n  return (\n    <div\n      className=\"info-main\"\n      style={{ visibility: infoVisible ? \"visible\" : \"hidden\" }}\n    >\n      <FontAwesomeIcon\n        icon={faTimes}\n        onClick={() => setInfoVisible(false)}\n        className=\"info-exit-icon\"\n      />\n      <h2>Useful Controls</h2>\n      <p>[CTRL + LMB] - Fast move stack of items into another inventory</p>\n      <p>[SHIFT + Drag] - Split item quantity into half</p>\n      <p>\n        [CTRL + SHIFT + LMB] - Fast move half a stack of items into another\n        inventory\n      </p>\n      <p>[ALT + LMB] - Fast use item</p>\n      <span\n        className=\"info-ox\"\n        onClick={() =>\n          Notify({ text: \"Made with 🧡 by the overextended 🐂 team\" })\n        }\n      >\n        🐂\n      </span>\n    </div>\n  );\n};\n\nconst InventoryControl: React.FC = () => {\n  const itemAmount = useAppSelector(selectItemAmount);\n  const dispatch = useAppDispatch();\n\n  const [infoVisible, setInfoVisible] = useState(false);\n\n  const [, use] = useDrop<DragSource, void, any>(() => ({\n    accept: \"SLOT\",\n    drop: (source) => onUse(source.item),\n  }));\n\n  const [, give] = useDrop<DragSource, void, any>(\n    () => ({\n      accept: \"SLOT\",\n      drop: (source) => onGive(source.item, itemAmount),\n    }),\n    [itemAmount]\n  );\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setItemAmount(event.target.valueAsNumber));\n  };\n\n  return (\n    <>\n      <Fade visible={infoVisible} duration={0.25} className=\"info-fade\">\n        <InfoScreen infoVisible={infoVisible} setInfoVisible={setInfoVisible} />\n      </Fade>\n      <div className=\"column-wrapper\" style={{ margin: \"1vh\" }}>\n        <input\n          type=\"number\"\n          className=\"button input\"\n          min={0}\n          defaultValue={itemAmount}\n          onChange={inputHandler}\n        />\n        <button ref={use} className=\"button\">\n          Use\n        </button>\n        <button ref={give} className=\"button\">\n          Give\n        </button>\n        <button className=\"button\" onClick={() => fetchNui(\"exit\")}>\n          Close\n        </button>\n        <div className=\"misc-btns\">\n          <button onClick={() => setInfoVisible(true)}>\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default InventoryControl;\n","//import toast from \"react-hot-toast\";\nimport { fetchNui } from '../utils/fetchNui';\nimport { Slot } from '../typings';\n\nexport const onUse = (item: Slot) => {\n  //toast.success(`Use ${item.name}`);\n  fetchNui('useItem', item);\n};\n","import toast from 'react-hot-toast';\nimport { Slot } from '../typings';\n\nexport const onGive = (item: Slot, count: number) => {\n  toast.success(`Give ${item.name}`);\n};\n","import { useState } from 'react';\nimport { isSlotWithItem } from '../../helpers';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport { Items } from '../../store/items';\nimport { Slot } from '../../typings';\nimport Fade from '../utils/Fade';\nimport WeightBar from '../utils/WeightBar';\n\nconst InventoryHotbar: React.FC<{ items: Slot[] }> = ({ items }) => {\n  const [hotbarVisible, setHotbarVisible] = useState(false);\n\n  //stupid fix for timeout\n  const [handle, setHandle] = useState<NodeJS.Timeout>();\n  useNuiEvent('toggleHotbar', () => {\n    if (hotbarVisible) {\n      setHotbarVisible(false);\n    } else {\n      if (handle) clearTimeout(handle);\n      setHotbarVisible(true);\n      setHandle(setTimeout(() => setHotbarVisible(false), 3000));\n    }\n  });\n\n  return (\n    <div className=\"center-wrapper\">\n      <Fade visible={hotbarVisible} className=\"hotbar-grid\">\n        {items.map((item) => (\n          <div\n            className=\"item-container\"\n            style={{\n              backgroundImage:\n                `url(${process.env.PUBLIC_URL + `/images/${item.name}.png`})` || 'none',\n            }}\n            key={`hotbar-${item.slot}`}\n          >\n            {isSlotWithItem(item) && (\n              <>\n                <div className=\"item-count\">\n                  <span>\n                    {item.weight >= 1000\n                      ? `${(item.weight / 1000).toLocaleString('en-us', {\n                          minimumFractionDigits: 2,\n                        })}kg`\n                      : `${item.weight.toLocaleString('en-us', {\n                          minimumFractionDigits: 0,\n                        })}g`}{' '}\n                    {item.count?.toLocaleString('en-us')}x\n                  </span>\n                </div>\n                {item.metadata?.durability && (\n                  <WeightBar percent={item.metadata.durability} durability />\n                )}\n                <div className=\"item-label\">\n                  [{item.slot}] {Items[item.name]?.label || 'NO LABEL'}\n                </div>\n              </>\n            )}\n          </div>\n        ))}\n      </Fade>\n    </div>\n  );\n};\n\nexport default InventoryHotbar;\n","import { useEffect, useRef } from 'react';\nimport { noop } from '../utils/misc';\nimport { fetchNui } from '../utils/fetchNui';\n\ntype FrameVisibleSetter = (bool: boolean) => void;\n\nconst LISTENED_KEYS = ['Escape'];\n\n// Basic hook to listen for key presses in NUI in order to exit\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\n  const setterRef = useRef<FrameVisibleSetter>(noop);\n\n  useEffect(() => {\n    setterRef.current = visibleSetter;\n  }, [visibleSetter]);\n\n  useEffect(() => {\n    const keyHandler = (e: KeyboardEvent) => {\n      if (LISTENED_KEYS.includes(e.code)) {\n        setterRef.current(false);\n        fetchNui('exit');\n      }\n    };\n\n    window.addEventListener('keyup', keyHandler);\n\n    return () => window.removeEventListener('keyup', keyHandler);\n  }, []);\n};\n","import React from 'react';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport InventoryGrid from './InventoryGrid';\nimport InventoryControl from './InventoryControl';\nimport InventoryHotbar from './InventoryHotbar';\nimport Fade from '../utils/Fade';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  selectLeftInventory,\n  selectRightInventory,\n  setupInventory,\n  refreshSlots,\n} from '../../store/inventory';\nimport { useExitListener } from '../../hooks/useExitListener';\n\nconst Inventory: React.FC = () => {\n  const [inventoryVisible, setInventoryVisible] = React.useState(false);\n\n  useNuiEvent<boolean>('setInventoryVisible', setInventoryVisible);\n  useNuiEvent<false>('closeInventory', setInventoryVisible);\n  useExitListener(setInventoryVisible);\n\n  const leftInventory = useAppSelector(selectLeftInventory);\n  const rightInventory = useAppSelector(selectRightInventory);\n\n  const dispatch = useAppDispatch();\n\n  useNuiEvent('setupInventory', (data) => {\n    dispatch(setupInventory(data));\n    !inventoryVisible && setInventoryVisible(true);\n  });\n\n  useNuiEvent('refreshSlots', (data) => dispatch(refreshSlots(data)));\n\n  return (\n    <>\n      <Fade visible={inventoryVisible} className=\"center-wrapper\">\n        <InventoryGrid inventory={leftInventory} />\n        <InventoryControl />\n        <InventoryGrid inventory={rightInventory} />\n      </Fade>\n      <InventoryHotbar items={leftInventory.items.slice(0, 5)} />\n    </>\n  );\n};\n\nexport default Inventory;\n","import React from 'react';\nimport { useAppDispatch } from '../store';\nimport useNuiEvent from '../hooks/useNuiEvent';\nimport { setShiftPressed } from '../store/inventory';\nimport DragPreview from './utils/DragPreview';\nimport Notifications from './utils/Notifications';\nimport ProgressBar from './utils/ProgressBar';\nimport useKeyPress from '../hooks/useKeyPress';\nimport { Items } from '../store/items';\nimport Inventory from './inventory';\nimport { debugData } from '../utils/debugData';\n\ndebugData([\n  {\n    action: 'setupInventory',\n    data: {\n      leftInventory: {\n        id: 'test',\n        type: 'player',\n        slots: 10,\n        maxWeight: 5000,\n        items: [\n          { slot: 1, name: 'water', weight: 100, metadata: { durability: 100 }, count: 1 },\n          { slot: 2, name: 'burger', weight: 100, count: 1 },\n          { slot: 3, name: 'cola', weight: 100, count: 1 },\n          { slot: 4, name: 'water', weight: 100, count: 1 },\n          { slot: 5, name: 'water', weight: 100, count: 1 },\n        ],\n      },\n      rightInventory: {\n        id: 'shop',\n        type: 'shop',\n        slots: 10,\n        items: [{ slot: 1, name: 'water', weight: 500 }],\n      },\n    },\n  },\n]);\n\nconst App: React.FC = () => {\n  useNuiEvent<typeof Items>('items', (items) => {\n    for (const [name, data] of Object.entries(items)) {\n      Items[name] = data;\n    }\n  });\n\n  const shiftPressed = useKeyPress('Shift');\n\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    dispatch(setShiftPressed(shiftPressed));\n  }, [shiftPressed, dispatch]);\n\n  return (\n    <>\n      <DragPreview />\n      <Notifications />\n      <Inventory />\n      <ProgressBar />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport { store } from \"./store\";\nimport App from \"./components/App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n        <App />\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}