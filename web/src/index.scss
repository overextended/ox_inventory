@import url('https://fonts.googleapis.com/css2?family=Signika:wght@300;400;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700&display=swap');

$mainFont: Signika;
$secondFont: Oxygen;

$mainColor: rgb(44, 62, 80);
$secondaryColor: #34495e;

$borderRadius: 0.4vh;

$gridCols: 5;
$gridRows: 5;
$gridSize: 9.8vh;
$gridGap: 2px;
$containerSize: calc(#{$gridRows} * #{$gridSize} + #{$gridRows} * #{$gridGap});

$imageSize: $gridSize - 2.5vh;

* {
  font-family: $mainFont;
  font-size: 1.5vh;
  font-weight: 400;
  box-sizing: content-box;
  // overflow: hidden; FIXES SUBMENU
  user-select: none;
  margin: 0;
  color: #fff;
  text-shadow: 0.1vh 0.1vh 0 rgba(0, 0, 0, 0.7);
}

img {
  image-rendering: -webkit-optimize-contrast;
  width: $imageSize;
  height: $imageSize;
}

.center-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
}

.column-wrapper {
  display: flex;
  flex-direction: column;
}

.row-wrapper {
  display: flex;
  flex-direction: row;
}

.inventory-label {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5vh;
}

.inventory-grid {
  display: grid;
  height: $containerSize;
  grid-template-columns: repeat($gridCols, $gridSize);
  grid-auto-rows: $gridSize;
  gap: $gridGap;
  overflow-y: scroll;
  margin-top: 0.5vh;
  margin-bottom: 1vh;
}

.drag {
  width: $imageSize;
  height: $imageSize;
  z-index: 1;
  position: fixed;
  pointer-events: none;
  top: 0;
  left: 0;
  background-repeat: no-repeat;
  background-position: center;
  background-size: $imageSize;
  image-rendering: -webkit-optimize-contrast;
}

@for $i from 1 through 5 {
  .inventory-grid:not(.inventory-grid-right)
    > .item-container:nth-child(#{$i})
    > .item-count:before,
  .hotbar-grid > .item-container:nth-child(#{$i}) > .item-count:before {
    content: '#{$i}';
    width: 1.5vh;
    height: 1.7vh;
    line-height: 1.7vh;
    font-size: 1vh;
    border-top-left-radius: $borderRadius;
    border-bottom-right-radius: $borderRadius;
    font-family: $secondFont;
    font-weight: 700;
    text-align: center;
    background-color: white;
    color: black;
    text-shadow: none;
  }
}

.item-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: rgba(0, 0, 0, 0.4);
  background-repeat: no-repeat;
  background-position: center;
  background-size: $imageSize;
  border-radius: $borderRadius;
  image-rendering: -webkit-optimize-contrast;
  position: relative;

  .item-count {
    display: flex;

    span {
      font-family: $secondFont;
      margin-left: auto;
      font-size: 1vh;
      font-weight: 300;
      padding: 0.2vh;
    }
  }

  .item-durability {
    margin-top: auto;
    background: rgba(0, 0, 0, 0.5);
    height: 0.5vh;

    div {
      height: 100%;
    }
  }

  .item-label {
    background-color: $mainColor;
    padding: 0.15vh;
    font-size: 1vh;
    text-align: center;
    text-transform: uppercase;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .item-price {
    position: absolute;
    font-size: 1.2vh;
    bottom: 1.4vh;
    right: 0.1vh;

    height: 2vh;

    display: flex;
    justify-content: center;
    align-items: center;

    .item-currency {
      height: auto;
      width: 2vh;
      backface-visibility: hidden;
      -ms-transform: translateZ(0); /* IE 9 */
      -webkit-transform: translateZ(0); /* Chrome, Safari, Opera */
      transform: translateZ(0);
    }
  }
}

.button {
  background-color: rgba(12, 12, 12, 0.35);
  border: 0.1vh solid rgba(0, 0, 0, 0.1);
  border-radius: $borderRadius;
  padding: 0.9vh;
  text-align: center;
  width: 16vh;
  margin: 0.8vh;

  &:hover {
    background-color: $mainColor;
    opacity: 0.8;
  }
}

.misc-btns {
  position: absolute;
  bottom: 1vh;
  right: 1vh;
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  button {
    @extend .button;
    width: 3vh;
    font-size: 2.5vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

input[type='number'] {
  @extend .button;
  margin-bottom: 3vh !important;

  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
  }

  &:focus {
    outline: none;
  }
}

::-webkit-scrollbar {
  display: none;
}

.weight-bar {
  background: rgba(0, 0, 0, 0.5);
  height: 1vh;
  border-radius: $borderRadius;

  div {
    height: 80%;
    border: solid rgba(0, 0, 0, 0.1) 0.1vh;
    border-radius: inherit;
  }
}

.hotbar-grid {
  display: grid;
  grid-template-columns: repeat(5, 100px);
  grid-auto-rows: 100px;
  gap: 2px;
  position: absolute;
  bottom: 2vh;
}

.item-info {
  margin-top: 1vh;
  padding: 1vh;
  font-weight: 400;
  font-size: 1.6vh;
  background-color: rgba(0, 0, 0, 0.267);
  border-radius: $borderRadius;
  width: calc(#{$containerSize} - 2.2vh);
  position: absolute;

  p {
    font-size: 1.4vh;
    font-weight: 300;
  }
}

.progressBar {
  width: 32vh;
  height: 4.2vh;
  position: absolute;
  bottom: 10vh;
  left: 50%;
  transform: translate(-50%, 0);
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: $borderRadius;

  &-value {
    width: 0;
    height: 100%;
    background-color: rgb(52, 152, 219);
    border-radius: inherit;
    animation: progressBar linear forwards;

    span {
      position: absolute;
      top: 50%;
      left: 50%;
      font-size: 2.2vh;
      width: 100%;
      text-align: center;
      transform: translate(-50%, -50%);
      overflow: hidden;
      display: inline-block;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    @keyframes progressBar {
      from {
        width: 0;
      }
      to {
        width: 100%;
      }
    }
  }

  &-cancel {
    @extend .progressBar-value;
    animation-play-state: paused;
    width: 100% !important;
    background-color: rgb(198, 40, 40);
  }
}

.info-fade {
  z-index: 99;
}

.info-main {
  position: absolute;
  width: 30vw;
  height: 40vh;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: $mainColor;
  border-radius: $borderRadius;
  z-index: 99;

  h2 {
    font-size: 3vh;
    text-align: center;
    padding-bottom: 2vh;
    padding-top: 2vh;
  }

  p {
    font-size: 1.8vh;
    padding: 2vh;
  }

  .info-exit-icon {
    font-size: 2.8vh;
    position: absolute;
    right: 1vh;
    top: 1vh;
  }

  .info-ox {
    position: absolute;
    right: 1vh;
    bottom: 1vh;
  }
}

.keyboard-container {
  height: fit-content;
  z-index: 999;
  width: 35vh;
  background-color: $mainColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: $borderRadius;

  .keyboard-header {
    text-shadow: none;
    font-size: 2.6vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2vh;
    padding-bottom: 1vh;
    letter-spacing: 0.08vh;
    border-bottom: 0.3vh solid grey;
  }

  .keyboard-component {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 1.7vh;
    align-items: center;
    p {
      margin-left: 0.4vh;
      text-shadow: none;
      font-size: 2vh;
      align-self: flex-start;
    }
    input {
      border-radius: $borderRadius;
      text-shadow: none;
      background-color: $secondaryColor;
      height: 3vh;
      width: 30vh;
      font-size: 1.8vh;
      padding: 0.4vh;
      border: none;
      outline: none;
    }
  }

  .keyboard-buttons-div {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 3vh;

    button {
      border: none;
      outline: none;
      font-size: 2vh;
      padding: 0.7vh;
      border-radius: $borderRadius;
      background-color: #4caf50;
    }
  }
}

.react-contexify {
  border-radius: $borderRadius;
  background-color: $mainColor;
  box-shadow: none;
  text-shadow: none;
}

.react-contexify__theme--dark .react-contexify__separator {
  background-color: grey;
}

.react-contexify__item:not(.react-contexify__item--disabled):hover
  > .react-contexify__item__content,
.react-contexify__item:not(.react-contexify__item--disabled):focus
  > .react-contexify__item__content {
  background-color: $secondaryColor;
}

.react-contexify .react-contexify__submenu {
  background-color: $mainColor;
  border-radius: $borderRadius;
  box-shadow: none;
  text-shadow: none;
}
